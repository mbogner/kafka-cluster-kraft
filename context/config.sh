#!/bin/bash
CONFIG_SOURCE=$1
CONFIG_TARGET=$2
if [[ "" == "${CONFIG_SOURCE}" ]]; then CONFIG_SOURCE=kraft-server.properties; fi
if [[ "" == "${CONFIG_TARGET}" ]]; then CONFIG_TARGET=tmp/server.properties; fi

echo "processing template ${CONFIG_SOURCE} to ${CONFIG_TARGET}"
cp kraft-server.properties "${CONFIG_TARGET}"

# DEFAULTS
if [[ "" == "${PROCESS_ROLES}" ]]; then PROCESS_ROLES="broker,controller"; fi
if [[ "" == "${NODE_ID}" ]]; then NODE_ID=1; fi
if [[ "" == "${CONTROLLER_PORT}" ]]; then CONTROLLER_PORT=9093; fi
if [[ "" == "${KAFKA_PORT}" ]]; then KAFKA_PORT=9092; fi
if [[ "" == "${EXTERNAL_PORT}" ]]; then EXTERNAL_PORT=9094; fi
if [[ "" == "${KAFKA_HOSTNAME}" ]]; then KAFKA_HOSTNAME="kafka1"; fi
if [[ "" == "${CONTROLLER_QUORUM_VOTERS}" ]]; then CONTROLLER_QUORUM_VOTERS="${NODE_ID}@${KAFKA_HOSTNAME}:${CONTROLLER_PORT}"; fi
if [[ "" == "${NUM_NETWORK_THREADS}" ]]; then NUM_NETWORK_THREADS=3; fi
if [[ "" == "${NUM_IO_THREADS}" ]]; then NUM_IO_THREADS=8; fi
if [[ "" == "${SOCKET_SEND_BUFFER_BYTES}" ]]; then SOCKET_SEND_BUFFER_BYTES=102400; fi
if [[ "" == "${SOCKET_RECEIVE_BUFFER_BYTES}" ]]; then SOCKET_RECEIVE_BUFFER_BYTES=102400; fi
if [[ "" == "${SOCKET_REQUEST_MAX_BYTES}" ]]; then SOCKET_REQUEST_MAX_BYTES=104857600; fi
if [[ "" == "${LOG_DIRS}" ]]; then LOG_DIRS="/tmp/kraft-combined-logs"; fi
if [[ "" == "${NUM_PARTITIONS}" ]]; then NUM_PARTITIONS=1; fi
if [[ "" == "${NUM_RECOVERY_THREADS_PER_DATA_DIR}" ]]; then NUM_RECOVERY_THREADS_PER_DATA_DIR=1; fi
if [[ "" == "${OFFSETS_TOPIC_REPLICATION_FACTOR}" ]]; then OFFSETS_TOPIC_REPLICATION_FACTOR=1; fi
if [[ "" == "${TRANSACTION_STATE_LOG_REPLICATION_FACTOR}" ]]; then TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1; fi
if [[ "" == "${TRANSACTION_STATE_LOG_MIN_ISR}" ]]; then TRANSACTION_STATE_LOG_MIN_ISR=1; fi
if [[ "" == "${LOG_RETENTION_HOURS}" ]]; then LOG_RETENTION_HOURS=168; fi
if [[ "" == "${LOG_SEGMENT_BYTES}" ]]; then LOG_SEGMENT_BYTES=1073741824; fi
if [[ "" == "${LOG_RETENTION_CHECK_INTERVAL_MS}" ]]; then LOG_RETENTION_CHECK_INTERVAL_MS=300000; fi
if [[ "" == "${BROKER_RACK}" ]]; then BROKER_RACK="rack1"; fi
if [[ "" == "${DEFAULT_REPLICATION_FACTOR}" ]]; then DEFAULT_REPLICATION_FACTOR=1; fi

##
echo "# PROCESS_ROLES: ${PROCESS_ROLES}"
sed -i "s/@@@PROCESS_ROLES@@@/${PROCESS_ROLES}/g" "${CONFIG_TARGET}"
##
echo "# NODE_ID: ${NODE_ID}"
sed -i "s/@@@NODE_ID@@@/${NODE_ID}/g" "${CONFIG_TARGET}"
##
echo "# CONTROLLER_PORT: ${CONTROLLER_PORT}"
sed -i "s/@@@CONTROLLER_PORT@@@/${CONTROLLER_PORT}/g" "${CONFIG_TARGET}"
##
echo "# KAFKA_PORT: ${KAFKA_PORT}"
sed -i "s/@@@KAFKA_PORT@@@/${KAFKA_PORT}/g" "${CONFIG_TARGET}"
##
echo "# EXTERNAL_PORT: ${EXTERNAL_PORT}"
sed -i "s/@@@EXTERNAL_PORT@@@/${EXTERNAL_PORT}/g" "${CONFIG_TARGET}"
##
echo "# KAFKA_HOSTNAME: ${KAFKA_HOSTNAME}"
sed -i "s/@@@KAFKA_HOSTNAME@@@/${KAFKA_HOSTNAME}/g" "${CONFIG_TARGET}"
##
echo "# CONTROLLER_QUORUM_VOTERS: ${CONTROLLER_QUORUM_VOTERS}"
sed -i "s/@@@CONTROLLER_QUORUM_VOTERS@@@/${CONTROLLER_QUORUM_VOTERS}/g" "${CONFIG_TARGET}"
##
echo "# NUM_NETWORK_THREADS: ${NUM_NETWORK_THREADS}"
sed -i "s/@@@NUM_NETWORK_THREADS@@@/${NUM_NETWORK_THREADS}/g" "${CONFIG_TARGET}"
##
echo "# NUM_IO_THREADS: ${NUM_IO_THREADS}"
sed -i "s/@@@NUM_IO_THREADS@@@/${NUM_IO_THREADS}/g" "${CONFIG_TARGET}"
##
echo "# SOCKET_SEND_BUFFER_BYTES: ${SOCKET_SEND_BUFFER_BYTES}"
sed -i "s/@@@SOCKET_SEND_BUFFER_BYTES@@@/${SOCKET_SEND_BUFFER_BYTES}/g" "${CONFIG_TARGET}"
##
echo "# SOCKET_RECEIVE_BUFFER_BYTES: ${SOCKET_RECEIVE_BUFFER_BYTES}"
sed -i "s/@@@SOCKET_RECEIVE_BUFFER_BYTES@@@/${SOCKET_RECEIVE_BUFFER_BYTES}/g" "${CONFIG_TARGET}"
##
echo "# SOCKET_REQUEST_MAX_BYTES: ${SOCKET_REQUEST_MAX_BYTES}"
sed -i "s/@@@SOCKET_REQUEST_MAX_BYTES@@@/${SOCKET_REQUEST_MAX_BYTES}/g" "${CONFIG_TARGET}"
##
echo "# LOG_DIRS: ${LOG_DIRS}"
sed -i "s!@@@LOG_DIRS@@@!${LOG_DIRS}!g" "${CONFIG_TARGET}"
##
echo "# NUM_PARTITIONS: ${NUM_PARTITIONS}"
sed -i "s/@@@NUM_PARTITIONS@@@/${NUM_PARTITIONS}/g" "${CONFIG_TARGET}"
##
echo "# NUM_RECOVERY_THREADS_PER_DATA_DIR: ${NUM_RECOVERY_THREADS_PER_DATA_DIR}"
sed -i "s/@@@NUM_RECOVERY_THREADS_PER_DATA_DIR@@@/${NUM_RECOVERY_THREADS_PER_DATA_DIR}/g" "${CONFIG_TARGET}"
##
echo "# OFFSETS_TOPIC_REPLICATION_FACTOR: ${OFFSETS_TOPIC_REPLICATION_FACTOR}"
sed -i "s/@@@OFFSETS_TOPIC_REPLICATION_FACTOR@@@/${OFFSETS_TOPIC_REPLICATION_FACTOR}/g" "${CONFIG_TARGET}"
##
echo "# TRANSACTION_STATE_LOG_REPLICATION_FACTOR: ${TRANSACTION_STATE_LOG_REPLICATION_FACTOR}"
sed -i "s/@@@TRANSACTION_STATE_LOG_REPLICATION_FACTOR@@@/${TRANSACTION_STATE_LOG_REPLICATION_FACTOR}/g" "${CONFIG_TARGET}"
##
echo "# TRANSACTION_STATE_LOG_MIN_ISR: ${TRANSACTION_STATE_LOG_MIN_ISR}"
sed -i "s/@@@TRANSACTION_STATE_LOG_MIN_ISR@@@/${TRANSACTION_STATE_LOG_MIN_ISR}/g" "${CONFIG_TARGET}"
##
echo "# LOG_RETENTION_HOURS: ${LOG_RETENTION_HOURS}"
sed -i "s/@@@LOG_RETENTION_HOURS@@@/${LOG_RETENTION_HOURS}/g" "${CONFIG_TARGET}"
##
echo "# LOG_SEGMENT_BYTES: ${LOG_SEGMENT_BYTES}"
sed -i "s/@@@LOG_SEGMENT_BYTES@@@/${LOG_SEGMENT_BYTES}/g" "${CONFIG_TARGET}"
##
echo "# LOG_RETENTION_CHECK_INTERVAL_MS: ${LOG_RETENTION_CHECK_INTERVAL_MS}"
sed -i "s/@@@LOG_RETENTION_CHECK_INTERVAL_MS@@@/${LOG_RETENTION_CHECK_INTERVAL_MS}/g" "${CONFIG_TARGET}"
##
echo "# BROKER_RACK: ${BROKER_RACK}"
sed -i "s/@@@BROKER_RACK@@@/${BROKER_RACK}/g" "${CONFIG_TARGET}"
##
echo "# DEFAULT_REPLICATION_FACTOR: ${DEFAULT_REPLICATION_FACTOR}"
sed -i "s/@@@DEFAULT_REPLICATION_FACTOR@@@/${DEFAULT_REPLICATION_FACTOR}/g" "${CONFIG_TARGET}"
